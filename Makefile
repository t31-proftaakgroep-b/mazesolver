CXXFLAGS=-Wall -Werror -pedantic -ggdb -O0 -std=c++11 -Isrc -static -pthread
LIBFLAGS=-fPIC -c

SERVER_SOURCES=$(wildcard src/Server/*.cpp)
SERVER_HEADERS=$(wildcard src/Server/*.h)
SERVER_OBJECTS=$(SERVER_SOURCES:.cpp=.o)

CLIENT_SOURCES=$(wildcard src/Client/*.cpp)
CLIENT_HEADERS=$(wildcard src/Client/*.h)
CLIENT_OBJECTS=$(CLIENT_SOURCES:.cpp=.o)

SCANNER_SOURCES=$(wildcard src/Scanner/*.cpp)
SCANNER_HEADERS=$(wildcard src/Scanner/*.h)
SCANNER_OBJECTS=$(SCANNER_SOURCES:.cpp=.o)

PLOTTER_SOURCES=$(wildcard src/Plotter/*.cpp)
PLOTTER_HEADERS=$(wildcard src/Plotter/*.h)
PLOTTER_OBJECTS=$(PLOTTER_SOURCES:.cpp=.o)

TCPCLIENT_SOURCES=$(wildcard src/TCPClient/*.cpp)
TCPCLIENT_HEADERS=$(wildcard src/TCPClient/*.h)
TCPCLIENT_OBJECTS=$(TCPCLIENT_SOURCES:.cpp=.o)

COMMUNICATION_SOURCES=$(wildcard src/communication/*.cpp)
COMMUNICATION_HEADERS=$(wildcard src/communication/*.h)
COMMUNICATION_OBJECTS=$(COMMUNICATION_SOURCES:.cpp=.o)

MAZESOLVER_SOURCES=$(wildcard src/MazeSolver/*.cpp)
MAZESOLVER_HEADERS=$(wildcard src/MazeSolver/*.h)
MAZESOLVER_OBJECTS=$(MAZESOLVER_SOURCES:.cpp=.o)

MOTOR_SOURCES=$(wildcard src/Motor/*.cpp)
MOTOR_HEADERS=$(wildcard src/Motor/*.h)
MOTOR_OBJECTS=$(MOTOR_SOURCES:.cpp=.o)

PLOTTERPROXY_SOURCES=$(wildcard src/PlotterProxy/*.cpp)
PLOTTERPROXY_HEADERS=$(wildcard src/PlotterProxy/*.h)
PLOTTERPROXY_OBJECTS=$(PLOTTERPROXY_SOURCES:.cpp=.o)

PLOTTERSTATEMACHINE_SOURCES=$(wildcard src/PlotterStatemachine/*.cpp)
PLOTTERSTATEMACHINE_HEADERS=$(wildcard src/PlotterStatemachine/*.h)
PLOTTERSTATEMACHINE_OBJECTS=$(PLOTTERSTATEMACHINE_SOURCES:.cpp=.o)

SCANNERSTATEMACHINE_SOURCES=$(wildcard src/ScannerStatemachine/*.cpp)
SCANNERSTATEMACHINE_HEADERS=$(wildcard src/ScannerStatemachine/*.h)
SCANNERSTATEMACHINE_OBJECTS=$(SCANNERSTATEMACHINE_SOURCES:.cpp=.o)

SCANNERPROXY_SOURCES=$(wildcard src/ScannerProxy/*.cpp)
SCANNERPROXY_HEADERS=$(wildcard src/ScannerProxy/*.h)
SCANNERPROXY_OBJECTS=$(SCANNERPROXY_SOURCES:.cpp=.o)

SENSOR_SOURCES=$(wildcard src/Sensor/*.cpp)
SENSOR_HEADERS=$(wildcard src/Sensor/*.h)
SENSOR_OBJECTS=$(SENSOR_SOURCES:.cpp=.o)

MAZE_SOURCES=$(wildcard src/Maze/*.cpp)
MAZE_HEADERS=$(wildcard src/Maze/*.h)
MAZE_OBJECTS=$(MAZE_SOURCES:.cpp=.o)

SOLUTION_SOURCES=$(wildcard src/Solution/*.cpp)
SOLUTION_HEADERS=$(wildcard src/Solution/*.h)
SOLUTION_OBJECTS=$(SOLUTION_SOURCES:.cpp=.o)

SCANNERSIMULATOR_SOURCES=$(wildcard src/ScannerSimulator/*.cpp)
SCANNERSIMULATOR_HEADERS=$(wildcard src/ScannerSimulator/*.h)
SCANNERSIMULATOR_OBJECTS=$(SCANNERSIMULATOR_SOURCES:.cpp=.o)

HEADERS=$(wildcard *.h)

SERVER_TARGET=server
CLIENT_TARGET=client
SCANNER_TARGET=scanner
PLOTTER_TARGET=plotter
TCPCLIENT_TARGET=tcpclient
COMMUNICATION_TARGET=communicationn
MAZESOLVER_TARGET=mazesolver
MOTOR_TARGET=motor
PLOTTERPROXY_TARGET=plotterproxy
PLOTTERSTATEMACHINE_TARGET=plotterstatemachine
SCANNERPROXY_TARGET=scannerproxy
SENSOR_TARGET=sensor
SCANNERSTATEMACHINE_TARGET=scannerstatemachine
MAZE_TARGET=maze
SOLUTION_TARGET=solution
SCANNERSIMULATOR_TARGET=scannersimulator 

CXX=g++

.PHONY: all clean

all: $(COMMUNICATION_TARGET) $(MAZE_TARGET) $(SERVER_TARGET) $(CLIENT_TARGET) $(SCANNER_TARGET) $(PLOTTER_TARGET) $(TCPCLIENT_TARGET) $(MAZESOLVER_TARGET) $(MOTOR_TARGET) $(PLOTTERPROXY_TARGET) $(PLOTTERSTATEMACHINE_TARGET) $(SENSOR_TARGET) $(SCANNERPROXY_TARGET) $(SOLUTION_TARGET) $(SCANNERSIMULATOR_TARGET)

$(SERVER_TARGET): $(SERVER_SOURCES) $(SERVER_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(COMMUNICATION_OBJECTS) $(MAZE_OBJECTS) -o $@ $(SERVER_SOURCES)

$(CLIENT_TARGET): $(CLIENT_SOURCES) $(CLIENT_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(CLIENT_SOURCES)

$(SCANNER_TARGET): $(SCANNER_SOURCES) $(SCANNER_OBJECTS) $(TCPCLIENT_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(TCPCLIENT_OBJECTS) -o $@ $(SCANNER_SOURCES)

$(PLOTTER_TARGET): $(PLOTTER_SOURCES) $(PLOTTER_OBJECTS) $(CLIENT_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(TCPCLIENT_OBJECTS) $(CLIENT_OBJECTS) -o $@ $(PLOTTER_SOURCES)

$(TCPCLIENT_TARGET): $(TCPCLIENT_SOURCES) $(TCPCLIENT_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(TCPCLIENT_SOURCES)

$(COMMUNICATION_TARGET): $(COMMUNICATION_SOURCES) $(COMMUNICATION_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(COMMUNICATION_SOURCES)

$(MAZESOLVER_TARGET): $(MAZESOLVER_SOURCES) $(MAZESOLVER_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(MAZESOLVER_SOURCES)

$(MOTOR_TARGET): $(MOTOR_SOURCES) $(MOTOR_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(MOTOR_SOURCES)

$(PLOTTERPROXY_TARGET): $(PLOTTERPROXY_SOURCES) $(PLOTTERPROXY_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(PLOTTERPROXY_SOURCES)

$(PLOTTERSTATEMACHINE_TARGET): $(PLOTTERSTATEMACHINE_SOURCES) $(PLOTTERSTATEMACHINE_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(PLOTTERSTATEMACHINE_SOURCES)

$(SCANNERSTATEMACHINE_TARGET): $(SCANNERSTATEMACHINE_SOURCES) $(SCANNERSTATEMACHINE_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(SCANNERSTATEMACHINE_SOURCES)

$(SENSOR_TARGET): $(SENSOR_SOURCES) $(SENSOR_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(SENSOR_SOURCES)

$(SCANNERPROXY_TARGET): $(SCANNERPROXY_SOURCES) $(SCANNERPROXY_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(SCANNERPROXY_SOURCES)

$(MAZE_TARGET): $(MAZE_SOURCES) $(MAZE_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(MAZE_SOURCES)

$(SOLUTION_TARGET): $(SOLUTION_SOURCES) $(SOLUTION_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LIBFLAGS) -o $@ $(SOLUTION_SOURCES)

$(SCANNERSIMULATOR_TARGET): $(SCANNERSIMULATOR_SOURCES) $(SCANNERSIMULATOR_OBJECTS) $(TCPCLIENT_OBJECTS) $(HEADERS)
	@$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(TCPCLIENT_OBJECTS) -o $@ $(SCANNERSIMULATOR_SOURCES)

clean:
	@rm -f $(SERVER_TARGET) $(CLIENT_TARGET) $(SCANNER_TARGET) $(PLOTTER_TARGET) $(TCPCLIENT_TARGET) $(COMMUNICATION_TARGET) $(MAZESOLVER_TARGET) $(MOTOR_TARGET) $(PLOTTERPROXY_TARGET) $(PLOTTERSTATEMACHINE_TARGET) $(SENSOR_TARGET) $(SCANNERPROXY_TARGET) $(MAZE_TARGET) $(SOLUTION_TARGET) $(SCANNERSIMULATOR_TARGET) ./*/*.o
	@rm -f $(SERVER_OBJECTS) $(CLIENT_OBJECTS) $(SCANNER_OBJECTS) $(PLOTTER_OBJECTS) $(TCPCLIENT_OBJECTS) $(COMMUNICATION_OBJECTS) $(MAZESOLVER_OBJECTS) $(MOTOR_OBJECTS) $(PLOTTERPROXY_OBJECTS) $(PLOTTERSTATEMACHINE_OBJECTS) $(SENSOR_OBJECTS) $(SCANNERPROXY_OBJECTS) $(MAZE_OBJECTS) $(SOLUTION_OBJECTS) $(SCANNERSIMULATOR_OBJECTS) ./*/*.o
